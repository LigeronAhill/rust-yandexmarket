/*
 * –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π API –ú–∞—Ä–∫–µ—Ç–∞
 *
 * API –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–º.  –í —á–∏—Å–ª–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:  * —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤–∏—Ç—Ä–∏–Ω–æ–π,  * –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤,  * –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞,  * –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

use reqwest;

use super::{configuration, Error};
use crate::apis::ResponseContent;

/// struct for typed errors of method [`confirm_business_prices`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ConfirmBusinessPricesError {
    Status400(crate::models::ApiClientDataErrorResponse),
    Status401(crate::models::ApiUnauthorizedErrorResponse),
    Status403(crate::models::ApiForbiddenErrorResponse),
    Status404(crate::models::ApiNotFoundErrorResponse),
    Status420(crate::models::ApiLimitErrorResponse),
    Status423(crate::models::ApiLockedErrorResponse),
    Status500(crate::models::ApiServerErrorResponse),
    UnknownValue(serde_json::Value),
}

/// struct for typed errors of method [`confirm_campaign_prices`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ConfirmCampaignPricesError {
    Status400(crate::models::ApiClientDataErrorResponse),
    Status401(crate::models::ApiUnauthorizedErrorResponse),
    Status403(crate::models::ApiForbiddenErrorResponse),
    Status404(crate::models::ApiNotFoundErrorResponse),
    Status420(crate::models::ApiLimitErrorResponse),
    Status423(crate::models::ApiLockedErrorResponse),
    Status500(crate::models::ApiServerErrorResponse),
    UnknownValue(serde_json::Value),
}

/// struct for typed errors of method [`get_business_quarantine_offers`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GetBusinessQuarantineOffersError {
    Status400(crate::models::ApiClientDataErrorResponse),
    Status401(crate::models::ApiUnauthorizedErrorResponse),
    Status403(crate::models::ApiForbiddenErrorResponse),
    Status404(crate::models::ApiNotFoundErrorResponse),
    Status420(crate::models::ApiLimitErrorResponse),
    Status500(crate::models::ApiServerErrorResponse),
    UnknownValue(serde_json::Value),
}

/// struct for typed errors of method [`get_campaign_quarantine_offers`]
#[derive(Debug, Clone, Serialize, Deserialize)]
#[serde(untagged)]
pub enum GetCampaignQuarantineOffersError {
    Status400(crate::models::ApiClientDataErrorResponse),
    Status401(crate::models::ApiUnauthorizedErrorResponse),
    Status403(crate::models::ApiForbiddenErrorResponse),
    Status404(crate::models::ApiNotFoundErrorResponse),
    Status420(crate::models::ApiLimitErrorResponse),
    Status500(crate::models::ApiServerErrorResponse),
    UnknownValue(serde_json::Value),
}

/// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω.  –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–¥–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞.  –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ. [–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).  |**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É, –Ω–µ –±–æ–ª–µ–µ 200 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ| |-|
pub async fn confirm_business_prices(
    configuration: &configuration::Configuration,
    business_id: i64,
    confirm_prices_request: crate::models::ConfirmPricesRequest,
) -> Result<crate::models::EmptyApiResponse, Error<ConfirmBusinessPricesError>> {
    let local_var_configuration = configuration;

    let local_var_client = &local_var_configuration.client;

    let local_var_uri_str = format!(
        "{}/businesses/{businessId}/price-quarantine/confirm",
        local_var_configuration.base_path,
        businessId = business_id
    );
    let mut local_var_req_builder =
        local_var_client.request(reqwest::Method::POST, local_var_uri_str.as_str());

    if let Some(ref local_var_user_agent) = local_var_configuration.user_agent {
        local_var_req_builder =
            local_var_req_builder.header(reqwest::header::USER_AGENT, local_var_user_agent.clone());
    }
    if let Some(ref local_var_token) = local_var_configuration.oauth_access_token {
        local_var_req_builder = local_var_req_builder.bearer_auth(local_var_token.to_owned());
    };
    local_var_req_builder = local_var_req_builder.json(&confirm_prices_request);

    let local_var_req = local_var_req_builder.build()?;
    let local_var_resp = local_var_client.execute(local_var_req).await?;

    let local_var_status = local_var_resp.status();
    let local_var_content = local_var_resp.text().await?;

    if !local_var_status.is_client_error() && !local_var_status.is_server_error() {
        serde_json::from_str(&local_var_content).map_err(Error::from)
    } else {
        let local_var_entity: Option<ConfirmBusinessPricesError> =
            serde_json::from_str(&local_var_content).ok();
        let local_var_error = ResponseContent {
            status: local_var_status,
            content: local_var_content,
            entity: local_var_entity,
        };
        Err(Error::ResponseError(local_var_error))
    }
}

/// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ —Ü–µ–Ω—É –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω.  –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ. [–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä–∞–Ω—Ç–∏–Ω](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).  |**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É| |-|
pub async fn confirm_campaign_prices(
    configuration: &configuration::Configuration,
    campaign_id: i64,
    confirm_prices_request: crate::models::ConfirmPricesRequest,
) -> Result<crate::models::EmptyApiResponse, Error<ConfirmCampaignPricesError>> {
    let local_var_configuration = configuration;

    let local_var_client = &local_var_configuration.client;

    let local_var_uri_str = format!(
        "{}/campaigns/{campaignId}/price-quarantine/confirm",
        local_var_configuration.base_path,
        campaignId = campaign_id
    );
    let mut local_var_req_builder =
        local_var_client.request(reqwest::Method::POST, local_var_uri_str.as_str());

    if let Some(ref local_var_user_agent) = local_var_configuration.user_agent {
        local_var_req_builder =
            local_var_req_builder.header(reqwest::header::USER_AGENT, local_var_user_agent.clone());
    }
    if let Some(ref local_var_token) = local_var_configuration.oauth_access_token {
        local_var_req_builder = local_var_req_builder.bearer_auth(local_var_token.to_owned());
    };
    local_var_req_builder = local_var_req_builder.json(&confirm_prices_request);

    let local_var_req = local_var_req_builder.build()?;
    let local_var_resp = local_var_client.execute(local_var_req).await?;

    let local_var_status = local_var_resp.status();
    let local_var_content = local_var_resp.text().await?;

    if !local_var_status.is_client_error() && !local_var_status.is_server_error() {
        serde_json::from_str(&local_var_content).map_err(Error::from)
    } else {
        let local_var_entity: Option<ConfirmCampaignPricesError> =
            serde_json::from_str(&local_var_content).ok();
        let local_var_error = ResponseContent {
            status: local_var_status,
            content: local_var_content,
            entity: local_var_entity,
        };
        Err(Error::ResponseError(local_var_error))
    }
}

/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ **–æ—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–Ω–µ**. –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–¥–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –∏ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∫–∞–±–∏–Ω–µ—Ç–∞.  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—É –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç –∏ —Ü–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). –ï—Å–ª–∏ —Ü–µ–Ω–∞ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—à–∏–±–æ—á–Ω–∞—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).  {% note info \"ùì† –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω?\" %}  ùìê –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π. [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  –í –∑–∞–ø—Ä–æ—Å–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ.  |**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É, –Ω–µ –±–æ–ª–µ–µ 500 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ| |-|
pub async fn get_business_quarantine_offers(
    configuration: &configuration::Configuration,
    business_id: i64,
    get_quarantine_offers_request: crate::models::GetQuarantineOffersRequest,
    page_token: Option<&str>,
    limit: Option<i32>,
) -> Result<crate::models::GetQuarantineOffersResponse, Error<GetBusinessQuarantineOffersError>> {
    let local_var_configuration = configuration;

    let local_var_client = &local_var_configuration.client;

    let local_var_uri_str = format!(
        "{}/businesses/{businessId}/price-quarantine",
        local_var_configuration.base_path,
        businessId = business_id
    );
    let mut local_var_req_builder =
        local_var_client.request(reqwest::Method::POST, local_var_uri_str.as_str());

    if let Some(ref local_var_str) = page_token {
        local_var_req_builder =
            local_var_req_builder.query(&[("page_token", &local_var_str.to_string())]);
    }
    if let Some(ref local_var_str) = limit {
        local_var_req_builder =
            local_var_req_builder.query(&[("limit", &local_var_str.to_string())]);
    }
    if let Some(ref local_var_user_agent) = local_var_configuration.user_agent {
        local_var_req_builder =
            local_var_req_builder.header(reqwest::header::USER_AGENT, local_var_user_agent.clone());
    }
    if let Some(ref local_var_token) = local_var_configuration.oauth_access_token {
        local_var_req_builder = local_var_req_builder.bearer_auth(local_var_token.to_owned());
    };
    local_var_req_builder = local_var_req_builder.json(&get_quarantine_offers_request);

    let local_var_req = local_var_req_builder.build()?;
    let local_var_resp = local_var_client.execute(local_var_req).await?;

    let local_var_status = local_var_resp.status();
    let local_var_content = local_var_resp.text().await?;

    if !local_var_status.is_client_error() && !local_var_status.is_server_error() {
        serde_json::from_str(&local_var_content).map_err(Error::from)
    } else {
        let local_var_entity: Option<GetBusinessQuarantineOffersError> =
            serde_json::from_str(&local_var_content).ok();
        let local_var_error = ResponseContent {
            status: local_var_status,
            content: local_var_content,
            entity: local_var_entity,
        };
        Err(Error::ResponseError(local_var_error))
    }
}

/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–µ –ø–æ —Ü–µ–Ω–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ.  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–Ω—É –∫–∞–∂–¥–æ–≥–æ –∏–∑ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω. –ï—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ—Ç –∏ —Ü–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ–µ —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). –ï—Å–ª–∏ —Ü–µ–Ω–∞ –≤ —Å–∞–º–æ–º –¥–µ–ª–µ –æ—à–∏–±–æ—á–Ω–∞—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å –ø–æ–º–æ—â—å—é –∑–∞–ø—Ä–æ—Å–∞ [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).  {% note info \"ùì† –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω?\" %}  ùìê –¢–æ–≤–∞—Ä –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞—Ä–∞–Ω—Ç–∏–Ω, –µ—Å–ª–∏ –µ–≥–æ —Ü–µ–Ω–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ä–µ–∑–∫–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π. [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)  {% endnote %}  –í –∑–∞–ø—Ä–æ—Å–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã.  –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ.  |**‚öôÔ∏è –õ–∏–º–∏—Ç:** 5000 —Ç–æ–≤–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É| |-|
pub async fn get_campaign_quarantine_offers(
    configuration: &configuration::Configuration,
    campaign_id: i64,
    get_quarantine_offers_request: crate::models::GetQuarantineOffersRequest,
    page_token: Option<&str>,
    limit: Option<i32>,
) -> Result<crate::models::GetQuarantineOffersResponse, Error<GetCampaignQuarantineOffersError>> {
    let local_var_configuration = configuration;

    let local_var_client = &local_var_configuration.client;

    let local_var_uri_str = format!(
        "{}/campaigns/{campaignId}/price-quarantine",
        local_var_configuration.base_path,
        campaignId = campaign_id
    );
    let mut local_var_req_builder =
        local_var_client.request(reqwest::Method::POST, local_var_uri_str.as_str());

    if let Some(ref local_var_str) = page_token {
        local_var_req_builder =
            local_var_req_builder.query(&[("page_token", &local_var_str.to_string())]);
    }
    if let Some(ref local_var_str) = limit {
        local_var_req_builder =
            local_var_req_builder.query(&[("limit", &local_var_str.to_string())]);
    }
    if let Some(ref local_var_user_agent) = local_var_configuration.user_agent {
        local_var_req_builder =
            local_var_req_builder.header(reqwest::header::USER_AGENT, local_var_user_agent.clone());
    }
    if let Some(ref local_var_token) = local_var_configuration.oauth_access_token {
        local_var_req_builder = local_var_req_builder.bearer_auth(local_var_token.to_owned());
    };
    local_var_req_builder = local_var_req_builder.json(&get_quarantine_offers_request);

    let local_var_req = local_var_req_builder.build()?;
    let local_var_resp = local_var_client.execute(local_var_req).await?;

    let local_var_status = local_var_resp.status();
    let local_var_content = local_var_resp.text().await?;

    if !local_var_status.is_client_error() && !local_var_status.is_server_error() {
        serde_json::from_str(&local_var_content).map_err(Error::from)
    } else {
        let local_var_entity: Option<GetCampaignQuarantineOffersError> =
            serde_json::from_str(&local_var_content).ok();
        let local_var_error = ResponseContent {
            status: local_var_status,
            content: local_var_content,
            entity: local_var_entity,
        };
        Err(Error::ResponseError(local_var_error))
    }
}
