/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// OrderPromoType : Тип скидки:  * `DIRECT_DISCOUNT` — прямая скидка, которую устанавливает продавец или Маркет.  * `BLUE_SET` — комплекты.  * `BLUE_FLASH` — флеш-акция.  * `MARKET_COUPON` — скидка по промокоду Маркета.  * `MARKET_PROMOCODE` — скидка по промокоду магазина.  * `MARKET_BLUE` — скидка на Маркете.  * `YANDEX_PLUS` — бесплатная доставка с подпиской Яндекс Плюс.  * `YANDEX_EMPLOYEE` — бесплатная доставка по определенным адресам.  * `LIMITED_FREE_DELIVERY_PROMO` — бесплатная доставка по ограниченному предложению.  * `FREE_DELIVERY_THRESHOLD` — бесплатная доставка при достижении определенной суммы заказа.  * `MULTICART_DISCOUNT` — скидка за то, что оформлена мультикорзина.  * `FREE_DELIVERY_FOR_LDI` — бесплатная доставка за то, что один из товаров крупногабаритный.  * `FREE_DELIVERY_FOR_LSC` — бесплатная доставка за то, что одна из корзин в мультикорзине крупногабаритная.  * `FREE_PICKUP` — бесплатная доставка в пункт выдачи заказов.  * `CHEAPEST_AS_GIFT` — самый дешевый товар в подарок.  * `CASHBACK` — кешбэк.  * `SUPPLIER_MULTICART_DISCOUNT` — скидка за доставку.  * `SPREAD_DISCOUNT_COUNT` — скидка за количество одинаковых товаров.  * `SPREAD_DISCOUNT_RECEIPT` — скидка от суммы чека.  * `ANNOUNCEMENT_PROMO` — информационная акция, скидка не применяется к товарам.  * `DISCOUNT_BY_PAYMENT_TYPE` — прямая скидка при оплате картой Плюса.  * `PERCENT_DISCOUNT` — прямая скидка в процентах.  * `DCO_EXTRA_DISCOUNT` — дополнительная скидка, необходимая для расчета субсидии от Маркета.  * `EMPTY_PROMO` — скрытые промокоды.  * `BLOCKING_PROMO` — блокирующее промо.  * `UNKNOWN` — неизвестный тип.  Неактуальные типы:  * `GENERIC_BUNDLE`.  * `MARKET_DEAL`.  * `MARKET_PRIME`.  * `MARKET_COIN`.  * `BERU_PLUS`.  * `PRICE_DROP_AS_YOU_SHOP`.  * `SECRET_SALE`.

/// Тип скидки:  * `DIRECT_DISCOUNT` — прямая скидка, которую устанавливает продавец или Маркет.  * `BLUE_SET` — комплекты.  * `BLUE_FLASH` — флеш-акция.  * `MARKET_COUPON` — скидка по промокоду Маркета.  * `MARKET_PROMOCODE` — скидка по промокоду магазина.  * `MARKET_BLUE` — скидка на Маркете.  * `YANDEX_PLUS` — бесплатная доставка с подпиской Яндекс Плюс.  * `YANDEX_EMPLOYEE` — бесплатная доставка по определенным адресам.  * `LIMITED_FREE_DELIVERY_PROMO` — бесплатная доставка по ограниченному предложению.  * `FREE_DELIVERY_THRESHOLD` — бесплатная доставка при достижении определенной суммы заказа.  * `MULTICART_DISCOUNT` — скидка за то, что оформлена мультикорзина.  * `FREE_DELIVERY_FOR_LDI` — бесплатная доставка за то, что один из товаров крупногабаритный.  * `FREE_DELIVERY_FOR_LSC` — бесплатная доставка за то, что одна из корзин в мультикорзине крупногабаритная.  * `FREE_PICKUP` — бесплатная доставка в пункт выдачи заказов.  * `CHEAPEST_AS_GIFT` — самый дешевый товар в подарок.  * `CASHBACK` — кешбэк.  * `SUPPLIER_MULTICART_DISCOUNT` — скидка за доставку.  * `SPREAD_DISCOUNT_COUNT` — скидка за количество одинаковых товаров.  * `SPREAD_DISCOUNT_RECEIPT` — скидка от суммы чека.  * `ANNOUNCEMENT_PROMO` — информационная акция, скидка не применяется к товарам.  * `DISCOUNT_BY_PAYMENT_TYPE` — прямая скидка при оплате картой Плюса.  * `PERCENT_DISCOUNT` — прямая скидка в процентах.  * `DCO_EXTRA_DISCOUNT` — дополнительная скидка, необходимая для расчета субсидии от Маркета.  * `EMPTY_PROMO` — скрытые промокоды.  * `BLOCKING_PROMO` — блокирующее промо.  * `UNKNOWN` — неизвестный тип.  Неактуальные типы:  * `GENERIC_BUNDLE`.  * `MARKET_DEAL`.  * `MARKET_PRIME`.  * `MARKET_COIN`.  * `BERU_PLUS`.  * `PRICE_DROP_AS_YOU_SHOP`.  * `SECRET_SALE`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrderPromoType {
    #[serde(rename = "DIRECT_DISCOUNT")]
    DirectDiscount,
    #[serde(rename = "BLUE_SET")]
    BlueSet,
    #[serde(rename = "BLUE_FLASH")]
    BlueFlash,
    #[serde(rename = "GENERIC_BUNDLE")]
    GenericBundle,
    #[serde(rename = "MARKET_COUPON")]
    MarketCoupon,
    #[serde(rename = "MARKET_PROMOCODE")]
    MarketPromocode,
    #[serde(rename = "MARKET_DEAL")]
    MarketDeal,
    #[serde(rename = "MARKET_BLUE")]
    MarketBlue,
    #[serde(rename = "MARKET_PRIME")]
    MarketPrime,
    #[serde(rename = "YANDEX_PLUS")]
    YandexPlus,
    #[serde(rename = "BERU_PLUS")]
    BeruPlus,
    #[serde(rename = "MARKET_COIN")]
    MarketCoin,
    #[serde(rename = "YANDEX_EMPLOYEE")]
    YandexEmployee,
    #[serde(rename = "LIMITED_FREE_DELIVERY_PROMO")]
    LimitedFreeDeliveryPromo,
    #[serde(rename = "FREE_DELIVERY_THRESHOLD")]
    FreeDeliveryThreshold,
    #[serde(rename = "MULTICART_DISCOUNT")]
    MulticartDiscount,
    #[serde(rename = "PRICE_DROP_AS_YOU_SHOP")]
    PriceDropAsYouShop,
    #[serde(rename = "FREE_DELIVERY_FOR_LDI")]
    FreeDeliveryForLdi,
    #[serde(rename = "FREE_DELIVERY_FOR_LSC")]
    FreeDeliveryForLsc,
    #[serde(rename = "SECRET_SALE")]
    SecretSale,
    #[serde(rename = "FREE_PICKUP")]
    FreePickup,
    #[serde(rename = "CHEAPEST_AS_GIFT")]
    CheapestAsGift,
    #[serde(rename = "CASHBACK")]
    Cashback,
    #[serde(rename = "SUPPLIER_MULTICART_DISCOUNT")]
    SupplierMulticartDiscount,
    #[serde(rename = "SPREAD_DISCOUNT_COUNT")]
    SpreadDiscountCount,
    #[serde(rename = "SPREAD_DISCOUNT_RECEIPT")]
    SpreadDiscountReceipt,
    #[serde(rename = "ANNOUNCEMENT_PROMO")]
    AnnouncementPromo,
    #[serde(rename = "DISCOUNT_BY_PAYMENT_TYPE")]
    DiscountByPaymentType,
    #[serde(rename = "PERCENT_DISCOUNT")]
    PercentDiscount,
    #[serde(rename = "DCO_EXTRA_DISCOUNT")]
    DcoExtraDiscount,
    #[serde(rename = "EMPTY_PROMO")]
    EmptyPromo,
    #[serde(rename = "BLOCKING_PROMO")]
    BlockingPromo,
    #[serde(rename = "UNKNOWN")]
    Unknown,
}

impl ToString for OrderPromoType {
    fn to_string(&self) -> String {
        match self {
            Self::DirectDiscount => String::from("DIRECT_DISCOUNT"),
            Self::BlueSet => String::from("BLUE_SET"),
            Self::BlueFlash => String::from("BLUE_FLASH"),
            Self::GenericBundle => String::from("GENERIC_BUNDLE"),
            Self::MarketCoupon => String::from("MARKET_COUPON"),
            Self::MarketPromocode => String::from("MARKET_PROMOCODE"),
            Self::MarketDeal => String::from("MARKET_DEAL"),
            Self::MarketBlue => String::from("MARKET_BLUE"),
            Self::MarketPrime => String::from("MARKET_PRIME"),
            Self::YandexPlus => String::from("YANDEX_PLUS"),
            Self::BeruPlus => String::from("BERU_PLUS"),
            Self::MarketCoin => String::from("MARKET_COIN"),
            Self::YandexEmployee => String::from("YANDEX_EMPLOYEE"),
            Self::LimitedFreeDeliveryPromo => String::from("LIMITED_FREE_DELIVERY_PROMO"),
            Self::FreeDeliveryThreshold => String::from("FREE_DELIVERY_THRESHOLD"),
            Self::MulticartDiscount => String::from("MULTICART_DISCOUNT"),
            Self::PriceDropAsYouShop => String::from("PRICE_DROP_AS_YOU_SHOP"),
            Self::FreeDeliveryForLdi => String::from("FREE_DELIVERY_FOR_LDI"),
            Self::FreeDeliveryForLsc => String::from("FREE_DELIVERY_FOR_LSC"),
            Self::SecretSale => String::from("SECRET_SALE"),
            Self::FreePickup => String::from("FREE_PICKUP"),
            Self::CheapestAsGift => String::from("CHEAPEST_AS_GIFT"),
            Self::Cashback => String::from("CASHBACK"),
            Self::SupplierMulticartDiscount => String::from("SUPPLIER_MULTICART_DISCOUNT"),
            Self::SpreadDiscountCount => String::from("SPREAD_DISCOUNT_COUNT"),
            Self::SpreadDiscountReceipt => String::from("SPREAD_DISCOUNT_RECEIPT"),
            Self::AnnouncementPromo => String::from("ANNOUNCEMENT_PROMO"),
            Self::DiscountByPaymentType => String::from("DISCOUNT_BY_PAYMENT_TYPE"),
            Self::PercentDiscount => String::from("PERCENT_DISCOUNT"),
            Self::DcoExtraDiscount => String::from("DCO_EXTRA_DISCOUNT"),
            Self::EmptyPromo => String::from("EMPTY_PROMO"),
            Self::BlockingPromo => String::from("BLOCKING_PROMO"),
            Self::Unknown => String::from("UNKNOWN"),
        }
    }
}

impl Default for OrderPromoType {
    fn default() -> OrderPromoType {
        Self::DirectDiscount
    }
}
