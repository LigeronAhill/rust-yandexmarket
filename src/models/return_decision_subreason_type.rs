/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// ReturnDecisionSubreasonType : Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию.

/// Детали причин возврата:   * `DO_NOT_FIT`:     * `USER_DID_NOT_LIKE` — товар не понравился.     * `USER_CHANGED_MIND` — передумал покупать.     * `DELIVERED_TOO_LONG` — длительный срок доставки, поэтому передумал.    * `BAD_QUALITY`:     * `BAD_PACKAGE` — упаковка товара была нарушена.     * `DAMAGED` — царапины, сколы.     * `NOT_WORKING` — не включается / не работает.     * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).    * `WRONG_ITEM`:     * `WRONG_ITEM` — не тот товар.     * `WRONG_COLOR` — не соответствует по цвету.     * `DID_NOT_MATCH_DESCRIPTION` — не соответствует заявленным характеристикам/описанию.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReturnDecisionSubreasonType {
    #[serde(rename = "USER_DID_NOT_LIKE")]
    UserDidNotLike,
    #[serde(rename = "USER_CHANGED_MIND")]
    UserChangedMind,
    #[serde(rename = "DELIVERED_TOO_LONG")]
    DeliveredTooLong,
    #[serde(rename = "BAD_PACKAGE")]
    BadPackage,
    #[serde(rename = "DAMAGED")]
    Damaged,
    #[serde(rename = "NOT_WORKING")]
    NotWorking,
    #[serde(rename = "INCOMPLETENESS")]
    Incompleteness,
    #[serde(rename = "WRONG_ITEM")]
    WrongItem,
    #[serde(rename = "WRONG_COLOR")]
    WrongColor,
    #[serde(rename = "DID_NOT_MATCH_DESCRIPTION")]
    DidNotMatchDescription,
    #[serde(rename = "UNKNOWN")]
    Unknown,
}

impl ToString for ReturnDecisionSubreasonType {
    fn to_string(&self) -> String {
        match self {
            Self::UserDidNotLike => String::from("USER_DID_NOT_LIKE"),
            Self::UserChangedMind => String::from("USER_CHANGED_MIND"),
            Self::DeliveredTooLong => String::from("DELIVERED_TOO_LONG"),
            Self::BadPackage => String::from("BAD_PACKAGE"),
            Self::Damaged => String::from("DAMAGED"),
            Self::NotWorking => String::from("NOT_WORKING"),
            Self::Incompleteness => String::from("INCOMPLETENESS"),
            Self::WrongItem => String::from("WRONG_ITEM"),
            Self::WrongColor => String::from("WRONG_COLOR"),
            Self::DidNotMatchDescription => String::from("DID_NOT_MATCH_DESCRIPTION"),
            Self::Unknown => String::from("UNKNOWN"),
        }
    }
}

impl Default for ReturnDecisionSubreasonType {
    fn default() -> ReturnDecisionSubreasonType {
        Self::UserDidNotLike
    }
}
