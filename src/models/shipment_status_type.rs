/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// ShipmentStatusType : Статус отгрузки:  * `OUTBOUND_CREATED` — формируется. * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать. * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке. * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи. * `ACCEPTED` — принята в сортировочном центре или пункте приема. * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями. * `FINISHED` — завершена. * `ERROR` — отменена из-за ошибки.

/// Статус отгрузки:  * `OUTBOUND_CREATED` — формируется. * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать. * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке. * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи. * `ACCEPTED` — принята в сортировочном центре или пункте приема. * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями. * `FINISHED` — завершена. * `ERROR` — отменена из-за ошибки.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ShipmentStatusType {
    #[serde(rename = "OUTBOUND_CREATED")]
    OutboundCreated,
    #[serde(rename = "OUTBOUND_READY_FOR_CONFIRMATION")]
    OutboundReadyForConfirmation,
    #[serde(rename = "OUTBOUND_CONFIRMED")]
    OutboundConfirmed,
    #[serde(rename = "OUTBOUND_SIGNED")]
    OutboundSigned,
    #[serde(rename = "FINISHED")]
    Finished,
    #[serde(rename = "ACCEPTED")]
    Accepted,
    #[serde(rename = "ACCEPTED_WITH_DISCREPANCIES")]
    AcceptedWithDiscrepancies,
    #[serde(rename = "ERROR")]
    Error,
}

impl ToString for ShipmentStatusType {
    fn to_string(&self) -> String {
        match self {
            Self::OutboundCreated => String::from("OUTBOUND_CREATED"),
            Self::OutboundReadyForConfirmation => String::from("OUTBOUND_READY_FOR_CONFIRMATION"),
            Self::OutboundConfirmed => String::from("OUTBOUND_CONFIRMED"),
            Self::OutboundSigned => String::from("OUTBOUND_SIGNED"),
            Self::Finished => String::from("FINISHED"),
            Self::Accepted => String::from("ACCEPTED"),
            Self::AcceptedWithDiscrepancies => String::from("ACCEPTED_WITH_DISCREPANCIES"),
            Self::Error => String::from("ERROR"),
        }
    }
}

impl Default for ShipmentStatusType {
    fn default() -> ShipmentStatusType {
        Self::OutboundCreated
    }
}
