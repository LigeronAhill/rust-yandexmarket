/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// FeedIndexLogsRecordDto : Список отчетов по индексации прайс-листа.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FeedIndexLogsRecordDto {
    /// Дата и время загрузки прайс-листа.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
    #[serde(rename = "downloadTime", skip_serializing_if = "Option::is_none")]
    pub download_time: Option<String>,
    /// Дата и время, которые магазин указал в прайс-листе.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
    #[serde(rename = "fileTime", skip_serializing_if = "Option::is_none")]
    pub file_time: Option<String>,
    /// Идентификатор индексации.
    #[serde(rename = "generationId", skip_serializing_if = "Option::is_none")]
    pub generation_id: Option<i64>,
    #[serde(rename = "indexType", skip_serializing_if = "Option::is_none")]
    pub index_type: Option<crate::models::FeedIndexLogsIndexType>,
    /// Дата и время публикации предложений из прайс-листа на Яндекс Маркете.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
    #[serde(rename = "publishedTime", skip_serializing_if = "Option::is_none")]
    pub published_time: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::FeedIndexLogsStatusType>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<crate::models::FeedIndexLogsErrorDto>>,
    #[serde(rename = "offers", skip_serializing_if = "Option::is_none")]
    pub offers: Option<Box<crate::models::FeedIndexLogsOffersDto>>,
}

impl FeedIndexLogsRecordDto {
    /// Список отчетов по индексации прайс-листа.
    pub fn new() -> FeedIndexLogsRecordDto {
        FeedIndexLogsRecordDto {
            download_time: None,
            file_time: None,
            generation_id: None,
            index_type: None,
            published_time: None,
            status: None,
            error: None,
            offers: None,
        }
    }
}
