/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// ReturnInstanceStockType : Тип остатка на складе.

/// Тип остатка на складе.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReturnInstanceStockType {
    #[serde(rename = "FIT")]
    Fit,
    #[serde(rename = "DEFECT")]
    Defect,
    #[serde(rename = "ANOMALY")]
    Anomaly,
    #[serde(rename = "SURPLUS")]
    Surplus,
    #[serde(rename = "EXPIRED")]
    Expired,
    #[serde(rename = "MISGRADING")]
    Misgrading,
    #[serde(rename = "UNDEFINED")]
    Undefined,
    #[serde(rename = "INCORRECT_IMEI")]
    IncorrectImei,
    #[serde(rename = "INCORRECT_SERIAL_NUMBER")]
    IncorrectSerialNumber,
    #[serde(rename = "INCORRECT_CIS")]
    IncorrectCis,
    #[serde(rename = "PART_MISSING")]
    PartMissing,
    #[serde(rename = "NON_COMPLIENT")]
    NonComplient,
    #[serde(rename = "NOT_ACCEPTABLE")]
    NotAcceptable,
    #[serde(rename = "UNKNOWN")]
    Unknown,
}

impl ToString for ReturnInstanceStockType {
    fn to_string(&self) -> String {
        match self {
            Self::Fit => String::from("FIT"),
            Self::Defect => String::from("DEFECT"),
            Self::Anomaly => String::from("ANOMALY"),
            Self::Surplus => String::from("SURPLUS"),
            Self::Expired => String::from("EXPIRED"),
            Self::Misgrading => String::from("MISGRADING"),
            Self::Undefined => String::from("UNDEFINED"),
            Self::IncorrectImei => String::from("INCORRECT_IMEI"),
            Self::IncorrectSerialNumber => String::from("INCORRECT_SERIAL_NUMBER"),
            Self::IncorrectCis => String::from("INCORRECT_CIS"),
            Self::PartMissing => String::from("PART_MISSING"),
            Self::NonComplient => String::from("NON_COMPLIENT"),
            Self::NotAcceptable => String::from("NOT_ACCEPTABLE"),
            Self::Unknown => String::from("UNKNOWN"),
        }
    }
}

impl Default for ReturnInstanceStockType {
    fn default() -> ReturnInstanceStockType {
        Self::Fit
    }
}
