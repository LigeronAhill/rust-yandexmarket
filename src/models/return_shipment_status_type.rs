/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// ReturnShipmentStatusType : Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован.

/// Статус передачи возврата:  * `CREATED` — возврат создан.  * `RECEIVED` — принят у покупателя.  * `IN_TRANSIT` — возврат в пути.  * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.  * `PICKED` — возврат выдан магазину.  * `LOST` — возврат утерян при транспортировке.  * `CANCELLED` — возврат отменен.  * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.  * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.  * `UTILIZED` — возврат утилизирован.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReturnShipmentStatusType {
    #[serde(rename = "CREATED")]
    Created,
    #[serde(rename = "RECEIVED")]
    Received,
    #[serde(rename = "IN_TRANSIT")]
    InTransit,
    #[serde(rename = "READY_FOR_PICKUP")]
    ReadyForPickup,
    #[serde(rename = "PICKED")]
    Picked,
    #[serde(rename = "LOST")]
    Lost,
    #[serde(rename = "EXPIRED")]
    Expired,
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "FULFILMENT_RECEIVED")]
    FulfilmentReceived,
    #[serde(rename = "PREPARED_FOR_UTILIZATION")]
    PreparedForUtilization,
    #[serde(rename = "NOT_IN_DEMAND")]
    NotInDemand,
    #[serde(rename = "UTILIZED")]
    Utilized,
    #[serde(rename = "READY_FOR_EXPROPRIATION")]
    ReadyForExpropriation,
    #[serde(rename = "RECEIVED_FOR_EXPROPRIATION")]
    ReceivedForExpropriation,
}

impl ToString for ReturnShipmentStatusType {
    fn to_string(&self) -> String {
        match self {
            Self::Created => String::from("CREATED"),
            Self::Received => String::from("RECEIVED"),
            Self::InTransit => String::from("IN_TRANSIT"),
            Self::ReadyForPickup => String::from("READY_FOR_PICKUP"),
            Self::Picked => String::from("PICKED"),
            Self::Lost => String::from("LOST"),
            Self::Expired => String::from("EXPIRED"),
            Self::Cancelled => String::from("CANCELLED"),
            Self::FulfilmentReceived => String::from("FULFILMENT_RECEIVED"),
            Self::PreparedForUtilization => String::from("PREPARED_FOR_UTILIZATION"),
            Self::NotInDemand => String::from("NOT_IN_DEMAND"),
            Self::Utilized => String::from("UTILIZED"),
            Self::ReadyForExpropriation => String::from("READY_FOR_EXPROPRIATION"),
            Self::ReceivedForExpropriation => String::from("RECEIVED_FOR_EXPROPRIATION"),
        }
    }
}

impl Default for ReturnShipmentStatusType {
    fn default() -> ReturnShipmentStatusType {
        Self::Created
    }
}
