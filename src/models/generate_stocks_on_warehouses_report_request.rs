/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// GenerateStocksOnWarehousesReportRequest : Данные, необходимые для генерации отчета.

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GenerateStocksOnWarehousesReportRequest {
    /// Идентификатор магазина.
    #[serde(rename = "campaignId")]
    pub campaign_id: i64,
    /// Фильтр по идентификаторам складов (только модель FBY). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
    #[serde(rename = "warehouseIds", skip_serializing_if = "Option::is_none")]
    pub warehouse_ids: Option<Vec<i64>>,
    /// Фильтр по дате (для модели FBY). В отчет попадут данные за **предшествующий** дате день.
    #[serde(rename = "reportDate", skip_serializing_if = "Option::is_none")]
    pub report_date: Option<String>,
    /// Фильтр по категориям на Маркете (кроме модели FBY).
    #[serde(rename = "categoryIds", skip_serializing_if = "Option::is_none")]
    pub category_ids: Option<Vec<i64>>,
    /// Фильтр по наличию остатков (кроме модели FBY).
    #[serde(rename = "hasStocks", skip_serializing_if = "Option::is_none")]
    pub has_stocks: Option<bool>,
}

impl GenerateStocksOnWarehousesReportRequest {
    /// Данные, необходимые для генерации отчета.
    pub fn new(campaign_id: i64) -> GenerateStocksOnWarehousesReportRequest {
        GenerateStocksOnWarehousesReportRequest {
            campaign_id,
            warehouse_ids: None,
            report_date: None,
            category_ids: None,
            has_stocks: None,
        }
    }
}
