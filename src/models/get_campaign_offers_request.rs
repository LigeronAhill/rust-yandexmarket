/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом. В числе возможностей интеграции: * управление каталогом товаров и витриной, * обработка заказов, * изменение настроек магазина, * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// GetCampaignOffersRequest : Фильтрации товаров В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, Builder)]
pub struct GetCampaignOffersRequest {
    /// Идентификаторы товаров, информация о которых нужна. <br><br> {% note warning \"Такой список возвращается только целиком\" %} Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.  Если вы запрашиваете информацию по конкретным SKU, не заполняйте: * `page_token` * `limit` {% endnote %}
    #[serde(rename = "offerIds", skip_serializing_if = "Option::is_none")]
    #[builder(default, setter(strip_option))]
    pub offer_ids: Option<Vec<String>>,
    /// Фильтр по статусам товаров.
    #[serde(rename = "statuses", skip_serializing_if = "Option::is_none")]
    #[builder(
        default = "Some(vec![crate::models::OfferCampaignStatusType::Published])",
        setter(strip_option)
    )]
    pub statuses: Option<Vec<crate::models::OfferCampaignStatusType>>,
    /// Фильтр по категориям на Маркете.
    #[serde(rename = "categoryIds", skip_serializing_if = "Option::is_none")]
    #[builder(default, setter(strip_option))]
    pub category_ids: Option<Vec<i32>>,
    /// Фильтр по брендам.
    #[serde(rename = "vendorNames", skip_serializing_if = "Option::is_none")]
    #[builder(default, setter(strip_option))]
    pub vendor_names: Option<Vec<String>>,
    /// Фильтр по тегам.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    #[builder(default, setter(strip_option))]
    pub tags: Option<Vec<String>>,
}

impl GetCampaignOffersRequest {
    /// Фильтрации товаров В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
    pub fn builder() -> GetCampaignOffersRequestBuilder {
        GetCampaignOffersRequestBuilder::default()
    }
}
