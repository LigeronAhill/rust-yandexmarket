/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// OfferMappingErrorType : Типы ошибок:  * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).

/// Типы ошибок:  * `UNKNOWN_CATEGORY` — указана неизвестная категория. * `CATEGORY_MISMATCH` — указана категория, которая не совпадает с категорией товара. * `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории. * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории. * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое. * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа. * `VALUE_BLANK` — передано пустое значение. * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики. * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255. * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OfferMappingErrorType {
    #[serde(rename = "UNKNOWN_CATEGORY")]
    UnknownCategory,
    #[serde(rename = "CATEGORY_MISMATCH")]
    CategoryMismatch,
    #[serde(rename = "EMPTY_MARKET_CATEGORY")]
    EmptyMarketCategory,
    #[serde(rename = "UNKNOWN_PARAMETER")]
    UnknownParameter,
    #[serde(rename = "UNEXPECTED_BOOLEAN_VALUE")]
    UnexpectedBooleanValue,
    #[serde(rename = "NUMBER_FORMAT")]
    NumberFormat,
    #[serde(rename = "VALUE_BLANK")]
    ValueBlank,
    #[serde(rename = "INVALID_UNIT_ID")]
    InvalidUnitId,
    #[serde(rename = "INVALID_GROUP_ID_LENGTH")]
    InvalidGroupIdLength,
    #[serde(rename = "INVALID_GROUP_ID_CHARACTERS")]
    InvalidGroupIdCharacters,
}

impl ToString for OfferMappingErrorType {
    fn to_string(&self) -> String {
        match self {
            Self::UnknownCategory => String::from("UNKNOWN_CATEGORY"),
            Self::CategoryMismatch => String::from("CATEGORY_MISMATCH"),
            Self::EmptyMarketCategory => String::from("EMPTY_MARKET_CATEGORY"),
            Self::UnknownParameter => String::from("UNKNOWN_PARAMETER"),
            Self::UnexpectedBooleanValue => String::from("UNEXPECTED_BOOLEAN_VALUE"),
            Self::NumberFormat => String::from("NUMBER_FORMAT"),
            Self::ValueBlank => String::from("VALUE_BLANK"),
            Self::InvalidUnitId => String::from("INVALID_UNIT_ID"),
            Self::InvalidGroupIdLength => String::from("INVALID_GROUP_ID_LENGTH"),
            Self::InvalidGroupIdCharacters => String::from("INVALID_GROUP_ID_CHARACTERS"),
        }
    }
}

impl Default for OfferMappingErrorType {
    fn default() -> OfferMappingErrorType {
        Self::UnknownCategory
    }
}
