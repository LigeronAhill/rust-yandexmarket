/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// FeedContentErrorType : Тип ошибки в содержимом прайс-листа.  Возможные значения:  * `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать. * `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно. * `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.

/// Тип ошибки в содержимом прайс-листа.  Возможные значения:  * `PARSE_ERROR` — ошибка при проверке прайс-листа, не связанная с форматом YML. Например, прайс-лист пустой или его не удалось разархивировать. * `PARSE_XML_ERROR` — несоответствие техническим требованиям формата YML. Например, элементы и их значения описаны некорректно. * `TOO_MANY_REJECTED_OFFERS` — более чем в половине предложений из прайс-листа найдены ошибки. Все предложения из прайс-листа не будут опубликованы на Маркете.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FeedContentErrorType {
    #[serde(rename = "PARSE_ERROR")]
    ParseError,
    #[serde(rename = "PARSE_XML_ERROR")]
    ParseXmlError,
    #[serde(rename = "TOO_MANY_REJECTED_OFFERS")]
    TooManyRejectedOffers,
}

impl ToString for FeedContentErrorType {
    fn to_string(&self) -> String {
        match self {
            Self::ParseError => String::from("PARSE_ERROR"),
            Self::ParseXmlError => String::from("PARSE_XML_ERROR"),
            Self::TooManyRejectedOffers => String::from("TOO_MANY_REJECTED_OFFERS"),
        }
    }
}

impl Default for FeedContentErrorType {
    fn default() -> FeedContentErrorType {
        Self::ParseError
    }
}
