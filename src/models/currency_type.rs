/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};
use std::fmt::Display;

/// CurrencyType : Коды валют. Возможные значения: * `BYR` — белорусский рубль. * `KZT` — казахстанский тенге. * `RUR` — российский рубль. * `UAH` — украинская гривна.

/// Коды валют. Возможные значения: * `BYR` — белорусский рубль. * `KZT` — казахстанский тенге. * `RUR` — российский рубль. * `UAH` — украинская гривна.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CurrencyType {
    #[serde(rename = "RUR")]
    Rur,
    #[serde(rename = "USD")]
    Usd,
    #[serde(rename = "EUR")]
    Eur,
    #[serde(rename = "UAH")]
    Uah,
    #[serde(rename = "AUD")]
    Aud,
    #[serde(rename = "GBP")]
    Gbp,
    #[serde(rename = "BYR")]
    Byr,
    #[serde(rename = "BYN")]
    Byn,
    #[serde(rename = "DKK")]
    Dkk,
    #[serde(rename = "ISK")]
    Isk,
    #[serde(rename = "KZT")]
    Kzt,
    #[serde(rename = "CAD")]
    Cad,
    #[serde(rename = "CNY")]
    Cny,
    #[serde(rename = "NOK")]
    Nok,
    #[serde(rename = "XDR")]
    Xdr,
    #[serde(rename = "SGD")]
    Sgd,
    #[serde(rename = "TRY")]
    Try,
    #[serde(rename = "SEK")]
    Sek,
    #[serde(rename = "CHF")]
    Chf,
    #[serde(rename = "JPY")]
    Jpy,
    #[serde(rename = "AZN")]
    Azn,
    #[serde(rename = "ALL")]
    All,
    #[serde(rename = "DZD")]
    Dzd,
    #[serde(rename = "AOA")]
    Aoa,
    #[serde(rename = "ARS")]
    Ars,
    #[serde(rename = "AMD")]
    Amd,
    #[serde(rename = "AFN")]
    Afn,
    #[serde(rename = "BHD")]
    Bhd,
    #[serde(rename = "BGN")]
    Bgn,
    #[serde(rename = "BOB")]
    Bob,
    #[serde(rename = "BWP")]
    Bwp,
    #[serde(rename = "BND")]
    Bnd,
    #[serde(rename = "BRL")]
    Brl,
    #[serde(rename = "BIF")]
    Bif,
    #[serde(rename = "HUF")]
    Huf,
    #[serde(rename = "VEF")]
    Vef,
    #[serde(rename = "KPW")]
    Kpw,
    #[serde(rename = "VND")]
    Vnd,
    #[serde(rename = "GMD")]
    Gmd,
    #[serde(rename = "GHS")]
    Ghs,
    #[serde(rename = "GNF")]
    Gnf,
    #[serde(rename = "HKD")]
    Hkd,
    #[serde(rename = "GEL")]
    Gel,
    #[serde(rename = "AED")]
    Aed,
    #[serde(rename = "EGP")]
    Egp,
    #[serde(rename = "ZMK")]
    Zmk,
    #[serde(rename = "ILS")]
    Ils,
    #[serde(rename = "INR")]
    Inr,
    #[serde(rename = "IDR")]
    Idr,
    #[serde(rename = "JOD")]
    Jod,
    #[serde(rename = "IQD")]
    Iqd,
    #[serde(rename = "IRR")]
    Irr,
    #[serde(rename = "YER")]
    Yer,
    #[serde(rename = "QAR")]
    Qar,
    #[serde(rename = "KES")]
    Kes,
    #[serde(rename = "KGS")]
    Kgs,
    #[serde(rename = "COP")]
    Cop,
    #[serde(rename = "CDF")]
    Cdf,
    #[serde(rename = "CRC")]
    Crc,
    #[serde(rename = "KWD")]
    Kwd,
    #[serde(rename = "CUP")]
    Cup,
    #[serde(rename = "LAK")]
    Lak,
    #[serde(rename = "LVL")]
    Lvl,
    #[serde(rename = "SLL")]
    Sll,
    #[serde(rename = "LBP")]
    Lbp,
    #[serde(rename = "LYD")]
    Lyd,
    #[serde(rename = "SZL")]
    Szl,
    #[serde(rename = "LTL")]
    Ltl,
    #[serde(rename = "MUR")]
    Mur,
    #[serde(rename = "MRO")]
    Mro,
    #[serde(rename = "MKD")]
    Mkd,
    #[serde(rename = "MWK")]
    Mwk,
    #[serde(rename = "MGA")]
    Mga,
    #[serde(rename = "MYR")]
    Myr,
    #[serde(rename = "MAD")]
    Mad,
    #[serde(rename = "MXN")]
    Mxn,
    #[serde(rename = "MZN")]
    Mzn,
    #[serde(rename = "MDL")]
    Mdl,
    #[serde(rename = "MNT")]
    Mnt,
    #[serde(rename = "NPR")]
    Npr,
    #[serde(rename = "NGN")]
    Ngn,
    #[serde(rename = "NIO")]
    Nio,
    #[serde(rename = "NZD")]
    Nzd,
    #[serde(rename = "OMR")]
    Omr,
    #[serde(rename = "PKR")]
    Pkr,
    #[serde(rename = "PYG")]
    Pyg,
    #[serde(rename = "PEN")]
    Pen,
    #[serde(rename = "PLN")]
    Pln,
    #[serde(rename = "KHR")]
    Khr,
    #[serde(rename = "SAR")]
    Sar,
    #[serde(rename = "RON")]
    Ron,
    #[serde(rename = "SCR")]
    Scr,
    #[serde(rename = "SYP")]
    Syp,
    #[serde(rename = "SKK")]
    Skk,
    #[serde(rename = "SOS")]
    Sos,
    #[serde(rename = "SDG")]
    Sdg,
    #[serde(rename = "SRD")]
    Srd,
    #[serde(rename = "TJS")]
    Tjs,
    #[serde(rename = "THB")]
    Thb,
    #[serde(rename = "TWD")]
    Twd,
    #[serde(rename = "BDT")]
    Bdt,
    #[serde(rename = "TZS")]
    Tzs,
    #[serde(rename = "TND")]
    Tnd,
    #[serde(rename = "TMM")]
    Tmm,
    #[serde(rename = "UGX")]
    Ugx,
    #[serde(rename = "UZS")]
    Uzs,
    #[serde(rename = "UYU")]
    Uyu,
    #[serde(rename = "PHP")]
    Php,
    #[serde(rename = "DJF")]
    Djf,
    #[serde(rename = "XAF")]
    Xaf,
    #[serde(rename = "XOF")]
    Xof,
    #[serde(rename = "HRK")]
    Hrk,
    #[serde(rename = "CZK")]
    Czk,
    #[serde(rename = "CLP")]
    Clp,
    #[serde(rename = "LKR")]
    Lkr,
    #[serde(rename = "EEK")]
    Eek,
    #[serde(rename = "ETB")]
    Etb,
    #[serde(rename = "RSD")]
    Rsd,
    #[serde(rename = "ZAR")]
    Zar,
    #[serde(rename = "KRW")]
    Krw,
    #[serde(rename = "NAD")]
    Nad,
    #[serde(rename = "TL")]
    Tl,
    #[serde(rename = "UE")]
    Ue,
}

impl Display for CurrencyType {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let str = match self {
            Self::Rur => String::from("RUR"),
            Self::Usd => String::from("USD"),
            Self::Eur => String::from("EUR"),
            Self::Uah => String::from("UAH"),
            Self::Aud => String::from("AUD"),
            Self::Gbp => String::from("GBP"),
            Self::Byr => String::from("BYR"),
            Self::Byn => String::from("BYN"),
            Self::Dkk => String::from("DKK"),
            Self::Isk => String::from("ISK"),
            Self::Kzt => String::from("KZT"),
            Self::Cad => String::from("CAD"),
            Self::Cny => String::from("CNY"),
            Self::Nok => String::from("NOK"),
            Self::Xdr => String::from("XDR"),
            Self::Sgd => String::from("SGD"),
            Self::Try => String::from("TRY"),
            Self::Sek => String::from("SEK"),
            Self::Chf => String::from("CHF"),
            Self::Jpy => String::from("JPY"),
            Self::Azn => String::from("AZN"),
            Self::All => String::from("ALL"),
            Self::Dzd => String::from("DZD"),
            Self::Aoa => String::from("AOA"),
            Self::Ars => String::from("ARS"),
            Self::Amd => String::from("AMD"),
            Self::Afn => String::from("AFN"),
            Self::Bhd => String::from("BHD"),
            Self::Bgn => String::from("BGN"),
            Self::Bob => String::from("BOB"),
            Self::Bwp => String::from("BWP"),
            Self::Bnd => String::from("BND"),
            Self::Brl => String::from("BRL"),
            Self::Bif => String::from("BIF"),
            Self::Huf => String::from("HUF"),
            Self::Vef => String::from("VEF"),
            Self::Kpw => String::from("KPW"),
            Self::Vnd => String::from("VND"),
            Self::Gmd => String::from("GMD"),
            Self::Ghs => String::from("GHS"),
            Self::Gnf => String::from("GNF"),
            Self::Hkd => String::from("HKD"),
            Self::Gel => String::from("GEL"),
            Self::Aed => String::from("AED"),
            Self::Egp => String::from("EGP"),
            Self::Zmk => String::from("ZMK"),
            Self::Ils => String::from("ILS"),
            Self::Inr => String::from("INR"),
            Self::Idr => String::from("IDR"),
            Self::Jod => String::from("JOD"),
            Self::Iqd => String::from("IQD"),
            Self::Irr => String::from("IRR"),
            Self::Yer => String::from("YER"),
            Self::Qar => String::from("QAR"),
            Self::Kes => String::from("KES"),
            Self::Kgs => String::from("KGS"),
            Self::Cop => String::from("COP"),
            Self::Cdf => String::from("CDF"),
            Self::Crc => String::from("CRC"),
            Self::Kwd => String::from("KWD"),
            Self::Cup => String::from("CUP"),
            Self::Lak => String::from("LAK"),
            Self::Lvl => String::from("LVL"),
            Self::Sll => String::from("SLL"),
            Self::Lbp => String::from("LBP"),
            Self::Lyd => String::from("LYD"),
            Self::Szl => String::from("SZL"),
            Self::Ltl => String::from("LTL"),
            Self::Mur => String::from("MUR"),
            Self::Mro => String::from("MRO"),
            Self::Mkd => String::from("MKD"),
            Self::Mwk => String::from("MWK"),
            Self::Mga => String::from("MGA"),
            Self::Myr => String::from("MYR"),
            Self::Mad => String::from("MAD"),
            Self::Mxn => String::from("MXN"),
            Self::Mzn => String::from("MZN"),
            Self::Mdl => String::from("MDL"),
            Self::Mnt => String::from("MNT"),
            Self::Npr => String::from("NPR"),
            Self::Ngn => String::from("NGN"),
            Self::Nio => String::from("NIO"),
            Self::Nzd => String::from("NZD"),
            Self::Omr => String::from("OMR"),
            Self::Pkr => String::from("PKR"),
            Self::Pyg => String::from("PYG"),
            Self::Pen => String::from("PEN"),
            Self::Pln => String::from("PLN"),
            Self::Khr => String::from("KHR"),
            Self::Sar => String::from("SAR"),
            Self::Ron => String::from("RON"),
            Self::Scr => String::from("SCR"),
            Self::Syp => String::from("SYP"),
            Self::Skk => String::from("SKK"),
            Self::Sos => String::from("SOS"),
            Self::Sdg => String::from("SDG"),
            Self::Srd => String::from("SRD"),
            Self::Tjs => String::from("TJS"),
            Self::Thb => String::from("THB"),
            Self::Twd => String::from("TWD"),
            Self::Bdt => String::from("BDT"),
            Self::Tzs => String::from("TZS"),
            Self::Tnd => String::from("TND"),
            Self::Tmm => String::from("TMM"),
            Self::Ugx => String::from("UGX"),
            Self::Uzs => String::from("UZS"),
            Self::Uyu => String::from("UYU"),
            Self::Php => String::from("PHP"),
            Self::Djf => String::from("DJF"),
            Self::Xaf => String::from("XAF"),
            Self::Xof => String::from("XOF"),
            Self::Hrk => String::from("HRK"),
            Self::Czk => String::from("CZK"),
            Self::Clp => String::from("CLP"),
            Self::Lkr => String::from("LKR"),
            Self::Eek => String::from("EEK"),
            Self::Etb => String::from("ETB"),
            Self::Rsd => String::from("RSD"),
            Self::Zar => String::from("ZAR"),
            Self::Krw => String::from("KRW"),
            Self::Nad => String::from("NAD"),
            Self::Tl => String::from("TL"),
            Self::Ue => String::from("UE"),
        };
        write!(f, "{}", str)
    }
}

impl Default for CurrencyType {
    fn default() -> CurrencyType {
        Self::Rur
    }
}
