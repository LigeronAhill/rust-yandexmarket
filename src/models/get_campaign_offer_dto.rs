/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetCampaignOfferDto : Параметры размещения товара в магазине.
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GetCampaignOfferDto {
    /// Ваш SKU — идентификатор товара в вашей системе.  Разрешена любая последовательность длиной до 255 знаков.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * SKU товара нельзя менять — можно только удалить товар и добавить заново с новым SKU.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
    #[serde(rename = "offerId")]
    pub offer_id: String,
    #[serde(rename = "quantum", skip_serializing_if = "Option::is_none")]
    pub quantum: Option<Box<crate::models::QuantumDto>>,
    /// Есть ли товар в продаже.
    #[serde(rename = "available", skip_serializing_if = "Option::is_none")]
    pub available: Option<bool>,
    #[serde(rename = "basicPrice", skip_serializing_if = "Option::is_none")]
    pub basic_price: Option<Box<crate::models::GetPriceWithDiscountDto>>,
    #[serde(rename = "campaignPrice", skip_serializing_if = "Option::is_none")]
    pub campaign_price: Option<Box<crate::models::GetPriceWithVatDto>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::OfferCampaignStatusType>,
    /// Ошибки, препятствующие размещению товара на витрине.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<crate::models::OfferErrorDto>>,
    /// Предупреждения, не препятствующие размещению товара на витрине.
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<crate::models::OfferErrorDto>>,
}

impl GetCampaignOfferDto {
    /// Параметры размещения товара в магазине.
    pub fn new(offer_id: String) -> GetCampaignOfferDto {
        GetCampaignOfferDto {
            offer_id,
            quantum: None,
            available: None,
            basic_price: None,
            campaign_price: None,
            status: None,
            errors: None,
            warnings: None,
        }
    }
}
