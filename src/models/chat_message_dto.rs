/*
 * Партнерский API Маркета
 *
 * API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.
 *
 * The version of the OpenAPI document: LATEST
 *
 * Generated by: https://openapi-generator.tech
 */

/// ChatMessageDto : Информация о сообщениях.
#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ChatMessageDto {
    /// Идентификатор сообщения.
    #[serde(rename = "messageId")]
    pub message_id: i64,
    /// Дата и время создания сообщения.  Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:00:00+03:00`.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "sender")]
    pub sender: crate::models::ChatMessageSenderType,
    /// Текст сообщения.  Необязательный параметр, если возвращается параметр `payload`.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// Информация о приложенных к сообщению файлах.  Необязательный параметр, если возвращается параметр `message`.
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<Vec<crate::models::ChatMessagePayloadDto>>,
}

impl ChatMessageDto {
    /// Информация о сообщениях.
    pub fn new(
        message_id: i64,
        created_at: String,
        sender: crate::models::ChatMessageSenderType,
    ) -> ChatMessageDto {
        ChatMessageDto {
            message_id,
            created_at,
            sender,
            message: None,
            payload: None,
        }
    }
}
